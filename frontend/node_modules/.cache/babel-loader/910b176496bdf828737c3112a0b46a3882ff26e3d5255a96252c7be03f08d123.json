{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, watch } from \"vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"HomePage\",\n  setup() {\n    const totalProvinceData = ref([]);\n    const provinceList = ref([]);\n    const districtList = ref([]);\n    const wardList = ref([]);\n    const areaSelection = ref({\n      province: null,\n      distric: null,\n      ward: null\n    });\n    const getProviceList = async () => {\n      let getData = await axios.get('https://provinces.open-api.vn/api/?depth=3');\n      return getData.data;\n    };\n    const provinceDataDivision = () => {\n      totalProvinceData.value.forEach(item => {\n        provinceList.value.push(item.name);\n      });\n    };\n    const testFunctions = () => {\n      console.log(\"Test okay\");\n    };\n    watch(() => areaSelection, () => {\n      districtList.value = [];\n      areaSelection.value.distric = null;\n      totalProvinceData.value.forEach(item => {\n        if (item.name == areaSelection.value.province) {\n          item.districts.forEach(district => {\n            districtList.value.push(district.name);\n          });\n        }\n      });\n      console.log(districtList.value);\n    });\n    const setUpData = async () => {\n      totalProvinceData.value = await getProviceList();\n      provinceDataDivision();\n    };\n    onMounted(() => {\n      setUpData();\n    });\n    return {\n      testFunctions,\n      totalProvinceData,\n      provinceList,\n      districtList,\n      areaSelection,\n      wardList\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","axios","name","setup","totalProvinceData","provinceList","districtList","wardList","areaSelection","province","distric","ward","getProviceList","getData","get","data","provinceDataDivision","value","forEach","item","push","testFunctions","console","log","districts","district","setUpData"],"sources":["/var/home/duchm/Documents/hotelInformationSharingWeb/frontend/src/views/HomePage.vue"],"sourcesContent":["<template lang=\"pug\">\n#header\n  .header-block\n      .header-filter.d-flex.pa-4\n        v-select(label=\"Tỉnh/Thành phố\" v-model=\"areaSelection.province\" variant=\"outlined\" density=\"compact\" :items=\"provinceList\" @input=\"testFunctions\").mr-2\n        v-select(label=\"Quận/Huyện\" v-model=\"areaSelection.distric\" variant=\"outlined\" density=\"compact\" :items=\"districtList\").mr-2\n        v-select(label=\"Phường/Xã\" variant=\"outlined\" density=\"compact\" :items=\"['One', 'Two', 'Three']\").mr-2\n        v-btn(variant=\"outlined\" size=\"large\").filter-search-button Tìm kiếm\n#body\n  .body-wrapper\n    v-container\n\n</template>\n<script>\nimport {ref,onMounted,watch} from \"vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"HomePage\",\n  setup(){\n    const totalProvinceData = ref([])\n    const provinceList = ref([])\n    const districtList = ref([])\n    const wardList = ref([])\n    const areaSelection = ref({\n      province: null,\n      distric: null,\n      ward: null\n    })\n    const getProviceList = async () => {\n      let getData = await axios.get('https://provinces.open-api.vn/api/?depth=3')\n      return getData.data;\n    }\n    const provinceDataDivision = () => {\n      totalProvinceData.value.forEach((item) => {\n        provinceList.value.push(item.name)\n      })\n    }\n    const testFunctions = () => {\n      console.log(\"Test okay\")\n    }\n    watch(() => areaSelection, ()=> {\n      districtList.value = []\n      areaSelection.value.distric = null\n      totalProvinceData.value.forEach(item => {\n        if(item.name == areaSelection.value.province){\n          item.districts.forEach(district => {\n            districtList.value.push(district.name);\n          })\n        }\n      })\n      console.log(districtList.value)\n    })\n    const setUpData = async () => {\n      totalProvinceData.value = await getProviceList()\n      provinceDataDivision()\n    }\n    onMounted(() => {\n      setUpData()\n    },\n    )\n    return {\n      testFunctions,\n      totalProvinceData,\n      provinceList,\n      districtList,\n      areaSelection,\n      wardList\n    }\n  }\n}\n</script>\n<style scoped lang=\"sass\">\n@import \"src/sass/common\"\n.header-block\n  background-color: $matisse-color\n  width: 100%\n  height: 300px\n  position: relative\n.header-filter\n  width: 60%\n  position: absolute\n  left: 50%\n  transform: translateX(-50%)\n  top: 275px\n  background-color: #ffffff\n  border: 1px solid $matisse-color\n  border-radius: 10px\nv-select\n  z-index: 2\n.filter-search-button\n  background-color: $matisse-color\n  color: #fff\n</style>"],"mappings":";AAcA,SAAQA,GAAG,EAACC,SAAS,EAACC,KAAK,QAAO,KAAK;AACvC,OAAOC,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,KAAKA,CAAA,EAAE;IACL,MAAMC,iBAAgB,GAAIN,GAAG,CAAC,EAAE;IAChC,MAAMO,YAAW,GAAIP,GAAG,CAAC,EAAE;IAC3B,MAAMQ,YAAW,GAAIR,GAAG,CAAC,EAAE;IAC3B,MAAMS,QAAO,GAAIT,GAAG,CAAC,EAAE;IACvB,MAAMU,aAAY,GAAIV,GAAG,CAAC;MACxBW,QAAQ,EAAE,IAAI;MACdC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE;IACR,CAAC;IACD,MAAMC,cAAa,GAAI,MAAAA,CAAA,KAAY;MACjC,IAAIC,OAAM,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAC,4CAA4C;MAC1E,OAAOD,OAAO,CAACE,IAAI;IACrB;IACA,MAAMC,oBAAmB,GAAIA,CAAA,KAAM;MACjCZ,iBAAiB,CAACa,KAAK,CAACC,OAAO,CAAEC,IAAI,IAAK;QACxCd,YAAY,CAACY,KAAK,CAACG,IAAI,CAACD,IAAI,CAACjB,IAAI;MACnC,CAAC;IACH;IACA,MAAMmB,aAAY,GAAIA,CAAA,KAAM;MAC1BC,OAAO,CAACC,GAAG,CAAC,WAAW;IACzB;IACAvB,KAAK,CAAC,MAAMQ,aAAa,EAAE,MAAK;MAC9BF,YAAY,CAACW,KAAI,GAAI,EAAC;MACtBT,aAAa,CAACS,KAAK,CAACP,OAAM,GAAI,IAAG;MACjCN,iBAAiB,CAACa,KAAK,CAACC,OAAO,CAACC,IAAG,IAAK;QACtC,IAAGA,IAAI,CAACjB,IAAG,IAAKM,aAAa,CAACS,KAAK,CAACR,QAAQ,EAAC;UAC3CU,IAAI,CAACK,SAAS,CAACN,OAAO,CAACO,QAAO,IAAK;YACjCnB,YAAY,CAACW,KAAK,CAACG,IAAI,CAACK,QAAQ,CAACvB,IAAI,CAAC;UACxC,CAAC;QACH;MACF,CAAC;MACDoB,OAAO,CAACC,GAAG,CAACjB,YAAY,CAACW,KAAK;IAChC,CAAC;IACD,MAAMS,SAAQ,GAAI,MAAAA,CAAA,KAAY;MAC5BtB,iBAAiB,CAACa,KAAI,GAAI,MAAML,cAAc,CAAC;MAC/CI,oBAAoB,CAAC;IACvB;IACAjB,SAAS,CAAC,MAAM;MACd2B,SAAS,CAAC;IACZ,CACA;IACA,OAAO;MACLL,aAAa;MACbjB,iBAAiB;MACjBC,YAAY;MACZC,YAAY;MACZE,aAAa;MACbD;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}